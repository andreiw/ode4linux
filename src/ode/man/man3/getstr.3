.\"
.\" @OSF_FREE_COPYRIGHT@
.\" COPYRIGHT NOTICE
.\" Copyright (c) 1992, 1991, 1990  
.\" Open Software Foundation, Inc. 
.\"  
.\" Permission is hereby granted to use, copy, modify and freely distribute 
.\" the software in this file and its documentation for any purpose without 
.\" fee, provided that the above copyright notice appears in all copies and 
.\" that both the copyright notice and this permission notice appear in 
.\" supporting documentation.  Further, provided that the name of Open 
.\" Software Foundation, Inc. ("OSF") not be used in advertising or 
.\" publicity pertaining to distribution of the software without prior 
.\" written permission from OSF.  OSF makes no representations about the 
.\" suitability of this software for any purpose.  It is provided "as is" 
.\" without express or implied warranty. 
.\"  
.\" Copyright (c) 1992 Carnegie Mellon University 
.\" All Rights Reserved. 
.\"  
.\" Permission to use, copy, modify and distribute this software and its 
.\" documentation is hereby granted, provided that both the copyright 
.\" notice and this permission notice appear in all copies of the 
.\" software, derivative works or modified versions, and any portions 
.\" thereof, and that both notices appear in supporting documentation. 
.\"  
.\" CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
.\" CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR 
.\" ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE. 
.\"  
.\" Carnegie Mellon requests users of this software to return to 
.\"  
.\" Software Distribution Coordinator  or  Software_Distribution@CS.CMU.EDU 
.\" School of Computer Science 
.\" Carnegie Mellon University 
.\" Pittsburgh PA 15213-3890 
.\"  
.\" any improvements or extensions that they make and grant Carnegie Mellon 
.\" the rights to redistribute these changes. 
.\"
.\"
.\" HISTORY
.\" $Log: getstr.3,v $
.\" Revision 1.4.2.2  1992/12/02  20:50:43  damon
.\" 	ODE 2.2 CR 183. Added CMU notice
.\" 	[1992/12/02  20:47:22  damon]
.\"
.\" Revision 1.4  1991/12/05  21:16:21  devrcs
.\" 	Added _FREE_ to copyright marker
.\" 	[91/08/01  08:16:21  mckeen]
.\" 
.\" Revision 1.3  90/10/07  21:58:06  devrcs
.\" 	Added EndLog Marker.
.\" 	[90/09/29  14:15:12  gm]
.\" 
.\" Revision 1.2  90/08/25  12:22:54  devrcs
.\" 	Taken from old libcs man pages
.\" 	[90/08/14  11:21:06  randyb]
.\" 
.\" Revision 1.2  90/01/02  19:37:25  gm
.\" 	Fixes for first snapshot.
.\" 
.\" Revision 1.1  89/12/26  10:50:45  gm
.\" 	Current version from CMU.
.\" 	[89/12/21            gm]
.\" 
.\" 	Revised for 4.3.
.\" 	[86/11/13            andi]
.\" 
.\" 	Error or EOF on standard input now causes default value to be used.
.\" 	[82/10/23            sas]
.\" 
.\" 	getstr now passes on error return from gets(3).
.\" 	[81/10/22            faa]
.\" 
.\" 	getsearch added.
.\" 	[80/01/23            sas]
.\" 
.\" 	Created.
.\" 	[79/12/05            sas]
.\" 
.\" $EndLog$
.TH GETSTR 3 10/23/82
.CM 3
.SH "NAME"
getstr, getstab, getsearch \- ask user to type a string
.SH "SYNOPSIS"
.B
#include <stdio.h>
.sp
.B
char *getstr (prompt,defalt,answer);
.br
.B
char *prompt,*defalt,*answer;
.sp
.B
int getstab (prompt,table,defalt);
.br
.B
int getsearch (prompt,table,defalt);
.br
.B
char *prompt,**table,*defalt;
.SH "DESCRIPTION"
.I
Getstr
will print
.I
prompt
as a message to the user, and ask for the user to type an
input string.
The string is then copied into
.I
answer.
If the user types just a carriage return, then the string
.I
defalt
is copied into
.I
answer.
.I
Answer
and
.I
defalt
may be the same string; in this case, the default value will
be the original contents of
.I
answer.
.sp
.I
Getstab
will print
.I
prompt
as a message to the user, and ask for an input string.
The string typed will be sought within the string table
.I
table,
and, if found, the index of this string will be returned.
If the user types just a carriage return, then the string
.I
defalt
will be assumed.
If nothing in the table matches the
input string, or if more than one string matches, then
an error message is printed and the prompt-and-response
cycle is repeated.
The string table may be declared this way:
.nf
.sp
	char *table[] = {
		"first string",
		"second string",
		...
		"n-th string",
		0};
.fi
.sp
.I
Getsearch
is just like
.I
getstab,
but performs a heuristic test for the quality of each string match,
and returns the index of the best match.
If the match is not exact,
the user is asked to approve or disapprove the choice of the
matching string; if he disapproves, several other closely matching
choices are listed.
.SH "SEE ALSO"
.IR stablk (3), 
.IR stlmatch (3), 
.IR getint (3), 
.IR getbool (3), 
etc.
.br
.IR strarg (3), 
.IR stabarg (3)
.br
.IR srchscore (3), 
.IR stabsearch (3), 
.IR searcharg (3)

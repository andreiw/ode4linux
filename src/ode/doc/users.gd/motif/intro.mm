.\" @OSF_FREE_COPYRIGHT@
.\" COPYRIGHT NOTICE
.\" (c) Copyright 1992, 1991, 1990 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" 
.\" HISTORY
.\" $Log: intro.mm,v $
.\" Revision 1.1.2.4  1992/12/03  19:12:40  damon
.\" 	ODE 2.2 CR 346. Expanded copyright
.\" 	[1992/12/03  18:42:28  damon]
.\"
.\" Revision 1.1.2.3  1992/03/16  15:22:44  hester
.\" 	small changes
.\" 	[1992/03/13  19:46:12  hester]
.\" 
.\" Revision 1.1.2.2  1992/03/10  23:17:40  hester
.\" 	first cut at Motif DUG
.\" 	[1992/02/24  17:39:21  hester]
.\" 
.\" $EndLog$
...\"*********************************************************************
...\"          Reset page information for chapters in Motif DUG
...\"*********************************************************************
.OH "'\fB\s10ODE User\'s Guide for Motif\fR''\\\\nP\s0'"	\"*** Set even page footers
.EH "'\s10\\\\nP''\fBIntroduction\s0\fR'"	\"*** Set odd page footers
.nr P 0                                 \"*** reset page number to page 1
.af P 1                                 \"*** reset page number to Arabic
.SK
...\"*********************************************************************
...\"          Contents of Motif DUG: Introduction
...\"*********************************************************************
.H 1 "Introduction"
The Motif Supplement to \fIThe OSF Development Environment User's Guide and 
Reference\fR (DUG) is part of a collection of documents that describe the
OSF Development Environment (ODE).
Other documents include the \fIThe OSF Development Environment User's Guide
and Reference\fR
which contains ODE information that is common to all projects, the \fIOSF 
Development Environment System Administration Guide\fR and other
supplemental versions of the DUG, which give specific ODE
information for other projects such as OSF/1 and DCE.
.P
The best way to use this documentation
is to first read the preface and introduction to ODE in the common DUG.  
These will acquaint you with the general concepts of ODE and how they are
covered in the common DUG.
Then you should read the corresponding chapters in the supplement and common 
DUGs side-by-side:  refer first to the intro portion of the 
supplement chapter for an indication of how it relates to the common chapter; 
read that information in the common DUG chapter;
then refer back to the supplement for the project-specific details.
.P
This supplement will call out the differences in the way that ODE is used
on the Motif project.  The bulk of the information on how to use ODE is
found in the common DUG.
.SP
.H 2 "The OSF Development Environment for Motif"
.P
Motif is an OSF offering that is being developed by a variety of companies,
known as external technology suppliers (ETS).
At the time of this writing the only ETS is Hewlett-Packard based in Corvallis,
Oregon.
Before using ODE, development work was done on separate source control trees -
one residing in Corvallis and one residing in Cambridge at OSF.
The use of ODE enables a single source control tree to be accessed by
both locations, thereby eliminating the 'by-hand' integration of 
development work done at the individual sites. 
.P
Unlike OSF/1 and DCE, Motif will use only the source control and sandbox
functionality of ODE, not the ODE \fBmake\fP facility.
The reasons and general implications for this are discussed in the following
paragraphs.
This will be the basis for most of the differences between the processes
described in the common DUG and those described in this Motif DUG.
.P
Because Motif is closely coupled with X11 from MIT, it uses the same build
environment as X11. 
That build environment is based on the \fBimake\fP program
distributed as part of X11.
The \fBimake\fP build environment works with the program \fBmake\fR using 
Makefiles that are generated by the \fBimake\fP program. 
\fBImake\fP generates machine-dependent 
Makefiles on a per-directory basis using a corresponding \fBImakefile\fP and
set of common templates and machine-specific configuration files.
.P
ODE provides a build environment based on a specific style of Makefiles that
are machine-independent.  The Makefiles are high-level specifications of 
what is needed to build the programs/libraries/etc in the current directory,
similar to the \fBImakefile\fP specifications.
ODE also uses a special version of \fBmake\fR.  
The ODE \fBmake\fR uses these Makefiles in conjunction with a set of common 
makefiles that contain the generic rules and machine-specific information,
to provide a build environment that has built-in knowledge of the development
environment (sandbox/backing build) .
This knowledge provides users of ODE \fBmake\fR with some desirable features
such as single-source/multiple object builds and sparsely populated sandboxes.
The single-source/multiple object model is based on a directory structure
within a build where one copy of the source code resides in a directory 
called \fBsrc\fR and the built source resides in an object directory 
called \fBobj\fR which has separate subdirectories for each os/hardware 
configuration that the sources are built for.
Sparsely populated sandboxes do not need to have copies or links of the
source files in a directory.  The ODE \fBmake\fP will find the appropriate
copy of the file in the backing build if it isn't present in the sandbox.
.P
Since the Motif project will use \fBimake\fR, all references to
\fBmake\fR, the common makefiles, the \fBobj\fR tree, and the \fBexport\fR
direcotory can be disregarded when reading the common DUG.
The basic areas of ODE that Motif uses are:
.BL
.LI
Source code control
.LI
Private and Public work areas (builds)
.LE
.SP
.H 3 "Terminology"
.P
The following terms are defined in the common DUG and placed here for the
reader's convenience.  
You should understand these terms before proceeding:
.VL 15
.LI \fBbuild\fR
A complete set of sources, objects, and binaries which have been "built"
and put in one place.
.LI "\fBbacking build\fR"
A complete set of sources, header files, and libraries
that support a sandbox.
.LI "\fBdefault build\fR"
For each project there is a default build that contains the newest
revisions of submitted sources.
In this document, that build is referred to as \fIlatest\fR;
see the supplemental DUGs for the actual name of the default build for
each project.
.LI \fBdefunct\fR
This refers to making a file that is under source control inactive.
Once it is made defunct, it can no longer be checked out for editing.
.LI "\fBoutdating\fR"
Removes from source control all references to work done on a file
in a private sandbox.
.LI \fBproject\fR
A set of sources that have been grouped together and are treated as
a unit.
Projects can be as large as the OS and as small or smaller than ODE itself.
Each project has separate builds and a separate default build from all
other projects.
.LI \fBsandbox\fR
A private working area that a developer owns and controls.
.LI \fBset\fR
A group of sources within a sandbox that can be manipulated as a
whole using the ODE tools.   
.LE
